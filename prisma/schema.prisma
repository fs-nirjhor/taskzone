// Prisma commands
//* run `npm i -D prisma` to install prisma
//* run `npm i @prisma/client` to install prisma/client
//* run `npx prisma init` to initiate prisma setup
//* run `npx prisma db push` to sync database with cloud
//* run `npx prisma generate` to generate prisma client 
//* run `npx prisma studio` to view database

//* run `npx prisma migrate reset` to reset existing database

//TODO: install prisma & prisma/client, init, push, generate to start project 
//TODO: reset, push & generate in order when modify a model 

generator client {
  provider = "prisma-client-js"
}

//// using supabase for url
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Board {
  id    String @id @unique @default(uuid())
  orgId String
  title String

  imageId       String
  imageUserName String @db.Text
  imageThumbUrl String @db.Text
  imageFullUrl  String @db.Text
  imageLinkHTML String @db.Text

  list List[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model List {
  id    String @id @unique @default(uuid())
  order Int    @unique
  title String

  boardId String
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards Card[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Card {
  id          String  @id @unique @default(uuid())
  order       Int     @unique
  title       String
  description String? @db.Text

  listId String
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
